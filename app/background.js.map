{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"fs-jetpack\"","webpack:///external \"path\"","webpack:///external \"url\"","webpack:///./src/helpers/window.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","helpers_window","options","userDataDir","jetpack","cwd","app","getPath","stateStoreFile","defaultSize","width","height","win","state","windowState","screen","getAllDisplays","some","display","bounds","x","y","windowWithinBounds","getPrimaryDisplay","assign","resetToDefaults","ensureVisibleOnSomeDisplay","restoredState","read","err","restore","BrowserWindow","on","isMinimized","isMaximized","position","getPosition","size","getSize","getCurrentPosition","write","atomic","env","userDataPath","setPath","mainWindow","createWindow","loadURL","url","format","pathname","path","join","__dirname","protocol","slashes","openDevTools","globalShortcut","register","console","log","reload","toggleDevTools","quit"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"electron\");","module.exports = require(\"fs-jetpack\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// This helper remembers the size and position of your windows (and restores\n// them in that place after app relaunch).\n// Can be used for more than one window, just construct many\n// instances of it and give each different name.\n\nimport { app, BrowserWindow, screen } from \"electron\";\nimport jetpack from \"fs-jetpack\";\n\nexport default (name, options) => {\n  const userDataDir = jetpack.cwd(app.getPath(\"userData\"));\n  const stateStoreFile = `window-state-${name}.json`;\n  const defaultSize = {\n    width: options.width,\n    height: options.height\n  };\n  let state = {};\n  let win;\n\n  const restore = () => {\n    let restoredState = {};\n    try {\n      restoredState = userDataDir.read(stateStoreFile, \"json\");\n    } catch (err) {\n      // For some reason json can't be read (might be corrupted).\n      // No worries, we have defaults.\n    }\n    return Object.assign({}, defaultSize, restoredState);\n  };\n\n  const getCurrentPosition = () => {\n    const position = win.getPosition();\n    const size = win.getSize();\n    return {\n      x: position[0],\n      y: position[1],\n      width: size[0],\n      height: size[1]\n    };\n  };\n\n  const windowWithinBounds = (windowState, bounds) => {\n    return (\n      windowState.x >= bounds.x &&\n      windowState.y >= bounds.y &&\n      windowState.x + windowState.width <= bounds.x + bounds.width &&\n      windowState.y + windowState.height <= bounds.y + bounds.height\n    );\n  };\n\n  const resetToDefaults = () => {\n    const bounds = screen.getPrimaryDisplay().bounds;\n    return Object.assign({}, defaultSize, {\n      x: (bounds.width - defaultSize.width) / 2,\n      y: (bounds.height - defaultSize.height) / 2\n    });\n  };\n\n  const ensureVisibleOnSomeDisplay = windowState => {\n    const visible = screen.getAllDisplays().some(display => {\n      return windowWithinBounds(windowState, display.bounds);\n    });\n    if (!visible) {\n      // Window is partially or fully not visible now.\n      // Reset it to safe defaults.\n      return resetToDefaults();\n    }\n    return windowState;\n  };\n\n  const saveState = () => {\n    if (!win.isMinimized() && !win.isMaximized()) {\n      Object.assign(state, getCurrentPosition());\n    }\n    userDataDir.write(stateStoreFile, state, { atomic: true });\n  };\n\n  state = ensureVisibleOnSomeDisplay(restore());\n\n  win = new BrowserWindow(Object.assign({}, options, state));\n\n  win.on(\"close\", saveState);\n\n  return win;\n};\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\";\nimport { app, Menu, globalShortcut } from \"electron\";\nimport createWindow from \"./helpers/window\";\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\n\nimport env from \"env\";\n\n\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\");\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n}\n\napp.on(\"ready\", () => {\n\n\n  const mainWindow = createWindow(\"main\", {\n    width: 1000,\n    height: 600\n  });\n\n  mainWindow.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  if (env.name === \"development\") {\n    mainWindow.openDevTools();\n  }\n\n  globalShortcut.register('f5', function() {\n    console.log('f5 is pressed')\n    mainWindow.reload()\n  })\n\n  globalShortcut.register('f6', function() {\n    console.log('f6 is pressed')\n    mainWindow.toggleDevTools();\n  })\n\n  globalShortcut.register('CommandOrControl+R', function() {\n    console.log('CommandOrControl+R is pressed')\n    mainWindow.reload()\n  })\n  \n});\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n"],"sourceRoot":""}